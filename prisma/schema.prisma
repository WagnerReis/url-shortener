// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  shortUrls      ShortUrl[]

  @@map("users")
}

model ShortUrl {
  id          String   @id @default(cuid())
  originalUrl String   @map("original_url")
  shortCode   String   @unique @map("short_code")
  userId      String   @map("user_id")
  clickCount  Int      @default(0) @map("click_count")
  clicks      Click[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  deletedAt   DateTime @updatedAt @map("deleted_at")

  user User @relation(fields: [userId], references: [id])

  @@map("short_urls")
}

model Click {
  id String @id @default(cuid())
  shortUrlId String @map("short_url_id")
  ipAddress   String? @map("ip_address")
  userAgent   String? @map("user_agent")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  shortUrl ShortUrl @relation(fields: [shortUrlId], references: [id])

  @@map("clicks")
}
